@startuml TD1Refactoring
package TD1 {
  package refactoring {
    package api {
        package burger {
            interface DieteticElement{
                calories_per_100g(): double
            }

            interface Product{
                price(): double
                weight(): double
            }

            interface Food extends DieteticElement, Product{
                calories(): double <<default>>
            }

            interface BurgerCook{
                with_cheese(): BurgerCook
                with_onions(): BurgerCook
                with_sauce(in sauce: BurgerSauce): BurgerCook
                with_tomato(): BurgerCook
                cook(): BurgerCook
            }

            interface BurgerRestaurant{
                order_menu(in menu: MenuType): BurgerCook
                order_personal(in size: MenuSize, in type: BurgerMeat): BurgerCook
            }

            class BurgerFactory{
                -instance: BurgerFactory {static}
                -registry: Map<Price, List<BurgerRestaurant>> {static}

                -this()
                +instance(): BurgerFactory {static}
                +register(in price: Price, in restaurant: BurgerRestaurant): void {static}
                +select(in price: Price): BurgerRestaurant
            }

            class Burger{
                -name: String

                +this(in name: String, in items: List<Food>)
                +calories(): double
                +weight(): double
                +price(): double
                +calories_per_100g(): double
                +toString(): String
            }

            class Cheddar implements Food {
                -BASE_PRICE : double {static}
                -weight: double

                +this(in weight: double)
                +calories_per_100g(): double
                +weight(): double
                +price(): double
                +toString(): String
            }

            class DeepFriedOnions implements Food {
                -BASE_PRICE : double {static}
                -weight: double

                +this(in weight: double)
                +calories_per_100g(): double
                +weight(): double
                +price(): double
                +toString(): String
            }

            class Meat implements Food {
                -type : BurgerMeat
                -weight: double

                +this(in type: BurgerMeat, in weight: double)
                +weight(): double
                +price(): double
                +calories_per_100g(): double
                +toString(): String
            }

            class Sauce implements Food {
                -type : BurgerSauce
                -weight: double

                +this(in type: BurgerSauce, in weight: double)
                +price(): double
                +weight(): double
                +calories_per_100g(): double
                +toString(): String
            }

            class Tomato implements Food {
                -BASE_PRICE : double {static}
                -weight: double

                +this(in weight: double)
                +calories_per_100g(): double
                +weight(): double
                +price(): double
                +toString(): String
            }

            enum BurgerMeat implements DieteticElement{
                BEEF, WHITEFISH

                +calories_per_100g(): double
                +price(): double
            }

            enum BurgerSauce implements DieteticElement{
                BURGER, BARBECUE, BEARNAISE

                +calories_per_100g(): double
            }

            enum MenuType{
                MEAT_MENU, FISH_MENU, CHEESE_MENU
            }

            enum MenuType{
                CHEAP, EXPENSIVE
            }

            enum MenuSize{
                SMALL, MEDIUM, BIG
            }

        }

        package macdeau {
            class McDeauCook implements BurgerCook{
                name: String

                this(in name: String, in size: MenuSize, in type: BurgerMeat)
                with_cheese(): McDeauCook
                with_onions(): McDeauCook
                with_sauce(in sauce: BurgerSauce): McDeauCook
                with_tomato(): McDeauCook
                cook(): McDeauCook
            }

            class MacDeauBurger extends Burger{
                this(in name: String, in items: List<Food>)
            }

            class MacDeauRestaurant implements BurgerRestaurant{
                -instance: MacDeauRestaurant {static}

                -this()
                +queue(): BurgerRestaurant {static}
                order_menu(in menu: MenuType): BurgerCook
                order_personal(in size: MenuSize, in type: BurgerMeat): BurgerCook
            }
        }

        package bigburger {
            class BigBurgerCook implements BurgerCook{
                name: String

                this(in name: String, in size: MenuSize, in type: BurgerMeat)
                with_cheese(): McDeauCook
                with_onions(): McDeauCook
                with_sauce(in sauce: BurgerSauce): McDeauCook
                with_tomato(): McDeauCook
                cook(): McDeauCook
            }

            class BigBurgerBurger extends Burger{
                this(in name: String, in items: List<Food>)
            }

            class BigBurgerRestaurant implements BurgerRestaurant{
                -instance: MacDeauRestaurant {static}

                -this()
                +queue(): BurgerRestaurant {static}
                order_menu(in menu: MenuType): BurgerCook
                order_personal(in size: MenuSize, in type: BurgerMeat): BurgerCook
            }
        }

        Food "*" <--*  Burger : -items
        Food "*" <--*  McDeauCook : -products
        Food "*" <--*  BigBurgerCook : -products

    }

    package client {
        class App
    }

  }

  client ..> api

}



@enduml